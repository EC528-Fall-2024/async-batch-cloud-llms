############# push container to gcloud ###############
gcloud init
gcloud auth configure-docker
docker build -t batch-processor .
docker tag rate-limiter-python-app gcr.io/elated-scope-437703-h9/batch-processor
docker push gcr.io/elated-scope-437703-h9/batch-processor


######################### deploy rate-limiter service whenever needed #################################
gcloud run deploy batch-processor \
  --image gcr.io/elated-scope-437703-h9/batch-processor \
  --platform managed \
  --region us-central1 \
  --allow-unauthenticated 




### Gcloud Login

## Auth for logins
## Command: gcloud auth application-default login
## Use: When you’re writing applications that need to authenticate programmatically using Google Cloud 
client libraries (e.g., for Python, Java, Node.js).
## Extra Commands: gcloud auth list


## Login for CLI 
## Command: gcloud auth login
## Use: When you need to authenticate the Google Cloud CLI (gcloud) for managing 
resources, running commands, and deploying apps via the command line.


## Command to show creditensl of a dataset
bq show --format=prettyjson project_id:dataset_id
bq show --format=prettyjson user_dataset:input_table



## Run from root (async-batch......)
gcloud auth activate-service-account --key-file=ServiceAccountKeys/elated-scope-437703-h9-b02b7351cc26.json

gcloud auth application-default print-access-token



API Key is: ServiceAccountKeys/elated-scope-437703-h9-b02b7351cc26.json



############ VM Notes lmao

## Commands to connect to ssh
gcloud compute ssh --zone "us-central1-a" "instance-20241107-000832" --project "elated-scope-437703-h9"


## VM Commands
sudo apt update
sudo apt install python3-pip
sudo apt install git -y

git clone https://github.com/EC528-Fall-2024/async-batch-cloud-llms.git


cd’d into Batch Processor

sudo apt install python3-venv -y
python3 -m venv myenv
source myenv/bin/activate

pip install flask
pip install google-auth google-cloud
pip install google-cloud-bigquery
pip install google-cloud-pubsub




###### Commands on the VM

## How to run the API
nohup gunicorn -b 0.0.0.0:8080 app:app &

## How to search for the process
ps aux | grep gunicorn

## How to 
kill <PID>